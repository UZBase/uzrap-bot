const TelegramBot = require("node-telegram-bot-api");
const TOKEN = "1955321733:AAE_g8WJ04Txd0pGTTea8TQbBwJUZK0WP-U";
const fs = require('fs')
const bot = new TelegramBot(TOKEN, {
    polling: true,
    updates: {
        enabled: true,
        get_interval: 1000,
    },
});
const start = () => {
    bot.on("message", async (message) => {
        const { chat, message_id } = message;
        const chatId = message.chat.id;
        const name = message.from.first_name;
        const text = message.text;

        if (
            text == "/start" ||
            text == "start" ||
            text == "–Ω–∞—á–∞—Ç—å" ||
            text == "/start@Uzrap_sizbilan_bot"
        ) {
            bot.deleteMessage(chatId, message_id);
            bot.sendPhoto(
                chat.id, "images/first.jpg", {
                caption: `Salom <b>${name}</b>.U·¥¢ Ä·¥á·¥ò ·¥è ü·¥Ä·¥ç…™·¥Ö·¥Ä…¢…™ ·¥á…¥…¢ ·¥ç·¥Äs ú ú·¥ú Ä ·¥†·¥Ä ·¥Äs ú·¥ú ü·¥Äs…™ ·¥ã·¥è…¥…¢…™ ü…¢·¥Ä  è·¥Ä«´…™…¥ ·¥ã·¥á ü·¥Ä·¥Ö…™…¢·¥Ä…¥  Ä·¥á·¥ò·¥á Ä ·¥†·¥Ä  ú…™·¥ò ú·¥è·¥ò ·¥ús·¥õ·¥Ä ü·¥Ä Ä…™…¥…™ …™·¥ä·¥è·¥Ö ·¥ç·¥Ä ús·¥ú ü…™…¥…™  è·¥è Ä…™·¥õ…™ ô  ô·¥è Ä·¥ú·¥†·¥Ñ ú…™  ô·¥è·¥õ…™·¥ç…™·¥¢…¢·¥Ä  ú·¥ús ú ·¥ã·¥á ü…™ ôs…™·¥¢
                «´·¥Ä ès…™ …™·¥ä·¥è·¥Ö·¥ã·¥è Ä…™·¥ç…™·¥¢…¥…™ ·¥õ·¥Ä…¥ ü·¥Ä ès…™·¥¢üé§üéß`,
                parse_mode: "HTML",
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: `üíî·¥Ö·¥èxx…™·¥çüíî`,
                                callback_data: `Doxxim`,
                            },
                            {
                                text: `‚ù§Ô∏è‚Äçü©π·¥ç1…¥·¥è Ä‚ù§Ô∏è‚Äçü©π`,
                                callback_data: `M1nor`,
                            },
                            {
                                text: `üî™·¥ú·¥¢ ô·¥è·¥è·¥çüî™`,
                                callback_data: `Uzboom`,
                            },
                        ],
                        [
                            {
                                text: `ü™ì·¥ã·¥è…¥s·¥õ·¥Äü™ì`,
                                callback_data: `Konsta`,
                            },
                            {
                                text: `ü™ö“ì·¥Ä è·¥¢·¥á·¥áü™ö`,
                                callback_data: `Fayzee`,
                            },
                            {
                                text: `üíâ·¥ç·¥è Ä“ìüíâ`,
                                callback_data: `Morf`,
                            },

                        ],
                        [
                            {
                                text: `üö¨ è·¥Ä…¢·¥¢·¥è…¥üö¨`,
                                callback_data: `yangoz`,
                            },
                        ]
                    ],
                },
            })


        }
    })
    bot.on("callback_query", async (query) => {
        const { chat, message_id, text } = query.message;
        const chatId = query.from.id
        switch (query.data) {
            case 'Boshiga':
                bot.deleteMessage(chatId, message_id);
                await bot.sendPhoto(
                    chat.id, "images/first.jpg", {
                    caption: `U·¥¢ Ä·¥á·¥ò ·¥è ü·¥Ä·¥ç…™·¥Ö·¥Ä…¢…™ ·¥á…¥…¢ ·¥ç·¥Äs ú ú·¥ú Ä ·¥†·¥Ä ·¥Äs ú·¥ú ü·¥Äs…™ ·¥ã·¥è…¥…¢…™ ü…¢·¥Ä  è·¥Ä«´…™…¥ ·¥ã·¥á ü·¥Ä·¥Ö…™…¢·¥Ä…¥  Ä·¥á·¥ò·¥á Ä ·¥†·¥Ä  ú…™·¥ò ú·¥è·¥ò ·¥ús·¥õ·¥Ä ü·¥Ä Ä…™…¥…™ …™·¥ä·¥è·¥Ö ·¥ç·¥Ä ús·¥ú ü…™…¥…™  è·¥è Ä…™·¥õ…™ ô  ô·¥è Ä·¥ú·¥†·¥Ñ ú…™  ô·¥è·¥õ…™·¥ç…™·¥¢…¢·¥Ä  ú·¥ús ú ·¥ã·¥á ü…™ ôs…™·¥¢
                        «´·¥Ä ès…™ …™·¥ä·¥è·¥Ö·¥ã·¥è Ä…™·¥ç…™·¥¢…¥…™ ·¥õ·¥Ä…¥ ü·¥Ä ès…™·¥¢üé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `üíî·¥Ö·¥èxx…™·¥çüíî`,
                                    callback_data: `Doxxim`,
                                },
                                {
                                    text: `‚ù§Ô∏è‚Äçü©π·¥ç1…¥·¥è Ä‚ù§Ô∏è‚Äçü©π`,
                                    callback_data: `M1nor`,
                                },
                                {
                                    text: `üî™·¥ú·¥¢ ô·¥è·¥è·¥çüî™`,
                                    callback_data: `Uzboom`,
                                },
                            ],
                            [
                                {
                                    text: `ü™ì·¥ã·¥è…¥s·¥õ·¥Äü™ì`,
                                    callback_data: `Konsta`,
                                },
                                {
                                    text: `ü™ö“ì·¥Ä è·¥¢·¥á·¥áü™ö`,
                                    callback_data: `Fayzee`,
                                },
                                {
                                    text: `üíâ·¥ç·¥è Ä“ìüíâ`,
                                    callback_data: `Morf`,
                                },

                            ],
                            [
                                {
                                    text: `üö¨ è·¥Ä…¢·¥¢·¥è…¥üö¨`,
                                    callback_data: `yangoz`,
                                },
                            ]
                        ],
                    },
                })
                break
            case "Doxxim":
                await bot.sendPhoto(chat.id, 'https://avatars.mds.yandex.net/i?id=c6e00ed80e9628bc82efde8922a2515c-5115418-images-thumbs&n=13', {
                    caption: `·¥Ö·¥èxx…™·¥ç ·¥õ·¥Ä Ä·¥è…¥·¥Ä ü·¥Ä Ä…™…¥…™ ·¥ò·¥Äs Ä·¥è«´·¥Ö·¥Ä ·¥õ·¥Ä…¥…¢ ü·¥Äs ú…™…¥…¢…™·¥¢ ·¥ç·¥ú·¥ç·¥ã·¥ú…¥ !`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥Ñ ú…™ Ä·¥è è ü…™…¢…™·¥ç …¢·¥ú ü…™·¥ç`,
                                    callback_data: "d-Gulim",
                                },
                                {
                                    text: `·¥õ·¥ús ú ü·¥Ä Ä…™·¥ç…¢·¥Ä ·¥ã…™ Ä`,
                                    callback_data: "d-kir",
                                },

                            ],
                            [
                                {
                                    text: `·¥ú ·¥ç·¥á…¥ ·¥ú·¥Ñ ú·¥ú…¥`,
                                    callback_data: "d-uchun",
                                },
                                {
                                    text: `s·¥á·¥†…¢…™·¥ç…™·¥¢ ·¥õ·¥Ä·¥ç·¥è·¥ç`,
                                    callback_data: "d-tamom",
                                },
                            ],
                            [

                                {
                                    text: `·¥ç·¥Ä è·¥ús ·¥õ·¥Ä Ä·¥è…¥·¥Ä·¥ç`,
                                    callback_data: "d-taronam",
                                },
                                {
                                    text: `·¥ã·¥á·¥Ñ ú…™ Ä…™…¥…¢ ·¥è…¥·¥Ä`,
                                    callback_data: "d-ona",
                                },
                            ],
                            [

                                {
                                    text: `·¥ás ü·¥Ä·¥ç·¥Ä ·¥ç·¥á…¥…™`,
                                    callback_data: "d-meni",
                                },
                                {
                                    text: `«´·¥è'…¢'…™ Ä·¥Ñ ú·¥è«´`,
                                    callback_data: "d-irchoq",
                                },
                            ],
                            [
                                {
                                    text: ` ô·¥ès ú…™…¢·¥Ä üîù`,
                                    callback_data: "Boshiga",
                                },
                            ],
                        ],
                    },
                });
                break;
            case "M1nor":
                bot.sendPhoto(chatId, 'https://muzfm.tv/uploads/singers/photos/m1nor.jpg', {
                    caption: `‚ù§Ô∏è‚Äçü©π·¥ç1…¥·¥è Ä ·¥õ·¥Ä Ä·¥è…¥·¥Ä ü·¥Ä Ä…™…¥…™ ·¥ò·¥Äs Ä·¥è«´·¥Ö·¥Ä ·¥õ·¥Ä…¥…¢ ü·¥Äs ú…™…¥…¢…™·¥¢ ·¥ç·¥ú·¥ç·¥ã·¥ú…¥ !‚ù§Ô∏è‚Äçü©π`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥ç·¥á…¥·¥õ·¥Ä ü…™·¥õ·¥á·¥õ`,
                                    callback_data: "m-mentalitet",
                                },
                                {
                                    text: `·¥è·¥¢·¥è·¥Ö·¥ç·¥Ä…¥`,
                                    callback_data: "m-ozodman",
                                },
                            ],
                            [
                                {
                                    text: ` ô·¥è ü·¥Ä ü…™·¥ã`,
                                    callback_data: "m-bolalik",
                                },
                                {
                                    text: `·¥Ö·¥è's·¥õ…™…¥…¢·¥ç·¥Ä…¥`,
                                    callback_data: "m-dust",
                                },
                            ],
                            [
                                {
                                    text: `s·¥è'…¥…¢…¢…™ x·¥Ä·¥õ..`,
                                    callback_data: "m-xat",
                                },
                                {
                                    text: ` ô·¥è' ü·¥Ö…™ ·¥õ·¥Ä·¥ç·¥è·¥ç`,
                                    callback_data: "m-tamom",
                                },
                            ],
                            [
                                {
                                    text: ` ô·¥ès ú…™…¢·¥Ä üîù`,
                                    callback_data: "Boshiga",
                                },
                            ],
                        ],
                    },
                })
                break
            case "Uzboom":
                bot.sendPhoto(chatId, 'https://static10.tgstat.ru/channels/_0/6b/6be4d4d49f1057f095a61d2b8a10f652.jpg', {
                    caption: `üî™·¥ú·¥¢ ô·¥è·¥è·¥ç ·¥õ·¥Ä Ä·¥è…¥·¥Ä ü·¥Ä Ä…™…¥…™ ·¥ò·¥Äs Ä·¥è«´·¥Ö·¥Ä ·¥õ·¥Ä…¥…¢ ü·¥Äs ú…™…¥…¢…™·¥¢ ·¥ç·¥ú·¥ç·¥ã·¥ú…¥ !üî™`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥ç·¥Ä Ä…™·¥ä·¥ú·¥Ä…¥·¥Ä`,
                                    callback_data: "u-marijuana",
                                },
                                {
                                    text: `·¥ú·¥ç Ä ·¥ã…™·¥õ·¥è ô`,
                                    callback_data: "u-kitob",
                                },
                            ],
                            [
                                {
                                    text: ` è…™ ü ü·¥Ä Ä`,
                                    callback_data: "u-yillar",
                                },
                                {
                                    text: `…¥·¥è ô·¥ú·¥Ö 3`,
                                    callback_data: "u-nobud",
                                },
                            ],
                            [
                                {
                                    text: ` ô…™ Ä «´·¥Ä·¥Ö·¥Ä·¥ç`,
                                    callback_data: "u-qadam",
                                },
                                {
                                    text: ` ô…™·¥õ·¥Ñ ú`,
                                    callback_data: "u-bitch",
                                },
                            ],
                            [
                                {
                                    text: ` ô·¥ès ú…™…¢·¥Ä üîù`,
                                    callback_data: "Boshiga",
                                },
                            ],
                        ],
                    },
                })
                break
            case "Konsta":
                bot.sendPhoto(chatId, 'https://muzfm.tv/uploads/posts/2020-07/1596005155_konsta.jpg', {
                    caption: `ü™ì·¥ã·¥è…¥s·¥õ·¥Ä ·¥õ·¥Ä Ä·¥è…¥·¥Ä ü·¥Ä Ä…™…¥…™ ·¥ò·¥Äs Ä·¥è«´·¥Ö·¥Ä ·¥õ·¥Ä…¥…¢ ü·¥Äs ú…™…¥…¢…™·¥¢ ·¥ç·¥ú·¥ç·¥ã·¥ú…¥ !ü™ì`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `…¥·¥ÄÍú∞·¥Äs`,
                                    callback_data: "k-nafas",
                                },
                                {
                                    text: `·¥ä…™…¥…¥…™x·¥è…¥·¥Ä`,
                                    callback_data: "k-jinnixona",
                                },
                            ],
                            [
                                {
                                    text: `·¥ç·¥è'·¥ä…™·¥¢·¥Ä ü·¥Ä Ä`,
                                    callback_data: "k-jizalar",
                                },
                                {
                                    text: `·¥ú è·¥Ä·¥õ`,
                                    callback_data: "k-uyat",
                                },
                            ],
                            [
                                {
                                    text: ` ô·¥ès ú…™…¢·¥Ä üîù`,
                                    callback_data: "Boshiga",
                                },
                            ],
                        ],
                    },
                })
                break
            case "d-Gulim":
                const Gulim = fs.readFileSync('musics/Gulim.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, Gulim, {
                    caption: `·¥Ñ ú…™ Ä·¥è è ü…™…¢…™·¥ç …¢·¥ú ü…™·¥çüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Doxxim`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "d-kir":
                const kir = fs.readFileSync('musics/kir.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, kir, {
                    caption: `·¥õ·¥ús ú ü·¥Ä Ä…™·¥ç…¢·¥Ä ·¥ã…™ Äüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Doxxim`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "d-uchun":
                const uchun = fs.readFileSync('musics/uchun.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, uchun, {
                    caption: `·¥ú ·¥ç·¥á…¥ ·¥ú·¥Ñ ú·¥ú…¥üé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Doxxim`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "d-tamom":
                const Tamom = fs.readFileSync('musics/Tamom.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, Tamom, {
                    caption: `s·¥á·¥†…¢…™·¥ç…™·¥¢ ·¥õ·¥Ä·¥ç·¥è·¥çüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Doxxim`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "d-taronam":
                const taronam = fs.readFileSync('musics/taronam.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, taronam, {
                    caption: `·¥ç·¥Ä è·¥ús ·¥õ·¥Ä Ä·¥è…¥·¥Ä·¥çüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Doxxim`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "d-ona":
                const ona = fs.readFileSync('musics/ona.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, ona, {
                    caption: `·¥ã·¥á·¥Ñ ú…™ Ä…™…¥…¢ ·¥è…¥·¥Äüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Doxxim`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "d-meni":
                const meni = fs.readFileSync('musics/meni.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, meni, {
                    caption: `·¥ás ü·¥Ä·¥ç·¥Ä ·¥ç·¥á…¥…™üé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Doxxim`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "d-irchoq":
                const irchoq = fs.readFileSync('musics/irchoq.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, irchoq, {
                    caption: `«´·¥è'…¢'…™ Ä·¥Ñ ú·¥è«´üé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Doxxim`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "m-mentalitet":
                const mentalitet = fs.readFileSync('musics/m-mentalitet.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, mentalitet, {
                    caption: `·¥ç·¥á…¥·¥õ·¥Ä ü…™·¥õ·¥á·¥õüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `M1nor`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "m-ozodman":
                const ozodman = fs.readFileSync('musics/m-ozodman.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, ozodman, {
                    caption: `·¥è·¥¢·¥è·¥Ö·¥ç·¥Ä…¥üé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `M1nor`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "m-bolalik":
                const bolalik = fs.readFileSync('musics/m-bolalik.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, bolalik, {
                    caption: ` ô·¥è ü·¥Ä ü…™·¥ãüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `M1nor`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "m-dust":
                const dust = fs.readFileSync('musics/m-dust.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, dust, {
                    caption: `·¥Ö·¥è's·¥õ…™…¥…¢·¥ç·¥Ä…¥üé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `M1nor`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "m-xat":
                const xat = fs.readFileSync('musics/m-xat.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, xat, {
                    caption: `s·¥è'…¥…¢…¢…™ x·¥Ä·¥õ..üé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `M1nor`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "m-tamom":
                const tamom = fs.readFileSync('musics/m-tamom.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, tamom, {
                    caption: ` ô·¥è' ü·¥Ö…™ ·¥õ·¥Ä·¥ç·¥è·¥çüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `M1nor`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "u-marijuana":
                const marijuana = fs.readFileSync('musics/u-marijuana.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, marijuana, {
                    caption: `·¥ç·¥Ä Ä…™·¥ä·¥ú·¥Ä…¥·¥Äüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Uzboom`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "u-kitob":
                const kitob = fs.readFileSync('musics/u-kitob.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, kitob, {
                    caption: `·¥ú·¥ç Ä ·¥ã…™·¥õ·¥è ôüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Uzboom`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "u-yillar":
                const yillar = fs.readFileSync('musics/u-yillar.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, yillar, {
                    caption: ` è…™ ü ü·¥Ä Äüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Uzboom`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "u-nobud":
                const nobud = fs.readFileSync('musics/u-nobud.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, nobud, {
                    caption: `…¥·¥è ô·¥ú·¥Ö 3üé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Uzboom`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "u-qadam":
                const qadam = fs.readFileSync('musics/u-qadam.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, qadam, {
                    caption: ` ô…™ Ä «´·¥Ä·¥Ö·¥Ä·¥çüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Uzboom`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "u-bitch":
                const bitch = fs.readFileSync('musics/u-bitch.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, bitch, {
                    caption: ` ô…™·¥õ·¥Ñ úüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Uzboom`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "k-nafas":
                const nafas = fs.readFileSync('musics/k-nafas.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, nafas, {
                    caption: `…¥·¥ÄÍú∞·¥Äsüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Konsta`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "k-jinnixona":
                const jinnixona = fs.readFileSync('musics/k-jinnixona.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, jinnixona, {
                    caption: `·¥ä…™…¥…¥…™x·¥è…¥·¥Äüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Konsta`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "k-jizalar":
                const jizalar = fs.readFileSync('musics/k-jizalar.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, jizalar, {
                    caption: `·¥ç·¥è'·¥ä…™·¥¢·¥Ä ü·¥Ä Äüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Konsta`,
                                },
                            ]
                        ],
                    },
                });
                break
            case "k-uyat":
                const uyat = fs.readFileSync('musics/k-uyat.mp3'); // sync! that's sad! :-( Just making a point!
                bot.sendAudio(chatId, uyat, {
                    caption: `·¥ú è·¥Ä·¥õüé§üéß`,
                    parse_mode: "HTML",
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `·¥è Ä«´·¥Ä…¢·¥Ä ‚óÄÔ∏è`,
                                    callback_data: `Konsta`,
                                },
                            ]
                        ],
                    },
                });
                break
        }
    });
}
start()